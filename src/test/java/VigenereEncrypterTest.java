import org.example.Encrypter;
import org.example.VigenereEncrypter;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.*;

public class VigenereEncrypterTest {
   private VigenereEncrypter encrypter;


   @Before
   public void before() {
      encrypter = new VigenereEncrypter();
   }

   @Test
   public void generateKeyTest() throws Exception {
      String key = "ключ";
      String text = "криптография";

      String result = encrypter.generateKey(text, key);

      assertEquals("КЛЮЧЛМЯШМНАЩ", result);
   }

   @Test
   public void prepareTextTest() {
      String text = "криптография не кул. лол";

      String result = encrypter.prepareText(text);

      assertEquals("КРИПТОГРАФИЯНЕКУЛЛОЛ", result);
   }
   @Test
   public void simpleTest() throws Exception {
      String key = "ключ";
      String text = "криптография";

      String result = encrypter.encrypt(text, key);

      assertEquals("ХЬЖЖЮЫВИМВИШ", result);
   }
   @Test
   public void complexTest() throws Exception {
      String text = "еще там можно прочитать про вариант шифра с бегущим ключом, который был когда-то был невзламываемым. этот вариант заключается в использовании в качестве ключа блока текста, равного по длине исходному тексту. впрочем, и этот вариант, как оказалось, успешно поддается взлому. проблема с бегущим ключом шифра виженера состоит в том, что криптоаналитик имеет статистическую информацию о ключе (учитывая, что блок текста написан на известном языке) и эта информация будет отражаться в шифрованном тексте. если ключ действительно случайный, его длина равна длине сообщения и он использовался единожды, то шифр виженера теоретически будет невзламываемым, но такие системы уже относятся к классу систем одноразового кода, или одноразового шифр-блокнота. они действительно не поддаются взлому, однако их практическое применение довольно затруднительно.";
      String key = "мир";

      String result = encrypter.encrypt(text, key);
      assertEquals("СВХАЙЮЫЩЩЭЪГБЫЛЪАХЕКЁДЮЩФББХЯЛОЫОЗУМЩЩЯМОЁЖБЙЩОНИГОПЗСЩДГЪЖНОЯЗБПУГЩСРДИЛЛЗСЬКЁЖЦВПЗЪТЮКЕЭТЁЫЭООЦУНДИХАЫРРУДЯЪЯМФГУНГЫЧШЮПОЩВКЧЦДВРСЧФЖЖЯЬЛЪЗЛИЮЛЧБЙЖГЛИПВЁКМАЛССТЕКУОСШЗЙШЦУЙФСЧЭЖЦПАЭЦЦНИХХЙУАХЖЩЪТПФИЬЬЫНВЬВФДБЯЬГХСХЧБЗТСЯАЯЕИБЙЕУЁЬАЫЙХБЬИЦГГИЖХЦКЕШЁНСЮЬКЁАРЕМДТЛЦФМОХБЩТМЯЧПУЦКЩЩСКХДЧСЧХФОЪПЛБЭЪПЯСВАТИУЬЭГЙЬЮБГВЪХИЧФВЪГТЗЭИИВИНЬЧТТКГЭЕДЗМЫИМЙЯЙШПЁКБЛЗВЗГЕЕНЦОЛСБЁБНДПБТЗНОЭФТЦЖЩУЖЕЯМЙЯШШЮКНОЮДБЛКИЦЮВЭМТЭЩВЭЯЩЬЯЗЧУЗЯШВАОПЩЦГЗЕЬАЁАДРЙЗЖИННЮЕЕЪЁЭГЛЭМЖЗВПЫЕНЬЗМЁТЖПФСААИНРДЙЧУКЫЦСЦДЛЪКЕШЫЕТОПЬЪОУЗЫЯЁТЁЯМЫЦРБХЭФДТДГУИЬЖЬЁЫБЦЕЭЫЕЗЬХГДФИФЧЭЯГЩЗЕНОШКЁЮТЖЛФДЗЮУГИППТРПЕХРЁОКУЕТЪЩУТШХПФТПЦУЭЙНЬМХСЪТЮРИЩЩТАТШБАЛЫЯОГФЬНЫГЖФЫЁЯЮЖЗСЗДЫЮЬЭМКЦЕЛЪИЦДМИЬОКЬДЭЧУПЩДЖЖСМПТЕКЕММОШОЧДКЪНШНЧМШЛТЫРРРЦЙЪТКСЩИЭЧДЭЫРРАЪЕТШЫВРЯМЪГ",
              result);
   }

   @Test
   public void simpleDecryptTest() throws Exception {
      String text = "ХЬЖЖЮЫВИМВИШ";
      String key = "ключ";

      String result = encrypter.decrypt(text, key);

      assertEquals("КРИПТОГРАФИЯ", result);
   }

   @Test
   public void complexDecryptTest() throws Exception {
      String text = "СВХАЙЮЫЩЩЭЪГБЫЛЪАХЕКЁДЮЩФББХЯЛОЫОЗУМЩЩЯМОЁЖБЙЩОНИГОПЗСЩДГЪЖНОЯЗБПУГЩСРДИЛЛЗСЬКЁЖЦВПЗЪТЮКЕЭТЁЫЭООЦУНДИХАЫРРУДЯЪЯМФГУНГЫЧШЮПОЩВКЧЦДВРСЧФЖЖЯЬЛЪЗЛИЮЛЧБЙЖГЛИПВЁКМАЛССТЕКУОСШЗЙШЦУЙФСЧЭЖЦПАЭЦЦНИХХЙУАХЖЩЪТПФИЬЬЫНВЬВФДБЯЬГХСХЧБЗТСЯАЯЕИБЙЕУЁЬАЫЙХБЬИЦГГИЖХЦКЕШЁНСЮЬКЁАРЕМДТЛЦФМОХБЩТМЯЧПУЦКЩЩСКХДЧСЧХФОЪПЛБЭЪПЯСВАТИУЬЭГЙЬЮБГВЪХИЧФВЪГТЗЭИИВИНЬЧТТКГЭЕДЗМЫИМЙЯЙШПЁКБЛЗВЗГЕЕНЦОЛСБЁБНДПБТЗНОЭФТЦЖЩУЖЕЯМЙЯШШЮКНОЮДБЛКИЦЮВЭМТЭЩВЭЯЩЬЯЗЧУЗЯШВАОПЩЦГЗЕЬАЁАДРЙЗЖИННЮЕЕЪЁЭГЛЭМЖЗВПЫЕНЬЗМЁТЖПФСААИНРДЙЧУКЫЦСЦДЛЪКЕШЫЕТОПЬЪОУЗЫЯЁТЁЯМЫЦРБХЭФДТДГУИЬЖЬЁЫБЦЕЭЫЕЗЬХГДФИФЧЭЯГЩЗЕНОШКЁЮТЖЛФДЗЮУГИППТРПЕХРЁОКУЕТЪЩУТШХПФТПЦУЭЙНЬМХСЪТЮРИЩЩТАТШБАЛЫЯОГФЬНЫГЖФЫЁЯЮЖЗСЗДЫЮЬЭМКЦЕЛЪИЦДМИЬОКЬДЭЧУПЩДЖЖСМПТЕКЕММОШОЧДКЪНШНЧМШЛТЫРРРЦЙЪТКСЩИЭЧДЭЫРРАЪЕТШЫВРЯМЪГ";
      String key = "мир";

      String result = encrypter.decrypt(text, key);
      assertEquals("ЕЩЕТАММОЖНОПРОЧИТАТЬПРОВАРИАНТШИФРАСБЕГУЩИМКЛЮЧОМКОТОРЫЙБЫЛКОГДАТОБЫЛНЕВЗЛАМЫВАЕМЫМЭТОТВАРИАНТЗАКЛЮЧАЕТСЯВИСПОЛЬЗОВАНИИВКАЧЕСТВЕКЛЮЧАБЛОКАТЕКСТАРАВНОГОПОДЛИНЕИСХОДНОМУТЕКСТУВПРОЧЕМИЭТОТВАРИАНТКАКОКАЗАЛОСЬУСПЕШНОПОДДАЕТСЯВЗЛОМУПРОБЛЕМАСБЕГУЩИМКЛЮЧОМШИФРАВИЖЕНЕРАСОСТОИТВТОМЧТОКРИПТОАНАЛИТИКИМЕЕТСТАТИСТИЧЕСКУЮИНФОРМАЦИЮОКЛЮЧЕУЧИТЫВАЯЧТОБЛОКТЕКСТАНАПИСАННАИЗВЕСТНОМЯЗЫКЕИЭТАИНФОРМАЦИЯБУДЕТОТРАЖАТЬСЯВШИФРОВАННОМТЕКСТЕЕСЛИКЛЮЧДЕЙСТВИТЕЛЬНОСЛУЧАЙНЫЙЕГОДЛИНАРАВНАДЛИНЕСООБЩЕНИЯИОНИСПОЛЬЗОВАЛСЯЕДИНОЖДЫТОШИФРВИЖЕНЕРАТЕОРЕТИЧЕСКИБУДЕТНЕВЗЛАМЫВАЕМЫМНОТАКИЕСИСТЕМЫУЖЕОТНОСЯТСЯККЛАССУСИСТЕМОДНОРАЗОВОГОКОДАИЛИОДНОРАЗОВОГОШИФРБЛОКНОТАОНИДЕЙСТВИТЕЛЬНОНЕПОДДАЮТСЯВЗЛОМУОДНАКОИХПРАКТИЧЕСКОЕПРИМЕНЕНИЕДОВОЛЬНОЗАТРУДНИТЕЛЬНО",
              result);
   }

}
